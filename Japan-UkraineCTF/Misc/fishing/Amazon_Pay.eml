Return-Path: <account-update@amazon.co.jp>
Received: from mspmv07.ake-mailbk.plala.or.jp ([172.23.13.207])
          by mta-eh11.plala.or.jp with ESMTP
          id <20200813133504.YCD18750.mta-eh11.plala.or.jp@mspmv07.ake-mailbk.plala.or.jp>
          for <west-sec@mail.plala.or.jp>; Thu, 13 Aug 2020 22:35:04 +0900
Received: from mta-x14.ake-mailbk.plala.or.jp (HELO mta-x14.plala.or.jp) ([172.23.12.14])
  by mspmv.ake-mailbk.plala.or.jp with ESMTP; 13 Aug 2020 22:35:04 +0900
Received: from source:[107.174.40.52] helo:mail03.a06aptxmail.buzz
          by mta-x14.plala.or.jp with ESMTP
          id <20200813133503.XTYP31570.mta-x14.plala.or.jp@mail03.a06aptxmail.buzz>
          for <west-sec@mail.plala.or.jp>; Thu, 13 Aug 2020 22:35:03 +0900
Received: by mail01.a06aptxmail.buzz id h6l0og0f27ss for <west-sec@mail.plala.or.jp>; Thu, 13 Aug 2020 08:22:47 -0500 (envelope-from <account-update@amazon.co.jp>)
X-iron-level: 0
From: Amazon. co. jp <account-update@amazon.co.jp>
To: west-sec <west-sec@mail.plala.or.jp>
Subject: =?utf-8?B?QW1hem9uIFBheSDjgZToq4vmsYLlhoXlrrnjga7jgYrnn6Xjgok=?=
	=?utf-8?B?44Gb?=
Date: Thu, 13 Aug 2020 21:22:24 +0800
Message-ID: <00a57abdaab7$c10273bc$d87be97b$@jwbrrrsx>
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_050F_01C2B893.1B314EF0"
X-spam-judge: ok

This is a multi-part message in MIME format.

------=_NextPart_000_050F_01C2B893.1B314EF0
Content-Type: text/plain;
	charset="utf-8"
Content-Transfer-Encoding: base64

IOOBlOiri+axguWGheWuueOBruOBiuefpeOCieOBmyANCg0K0JBtYXpvbiDjgYrlrqLmp5ggDQoN
Cg0K5pel6aCD44Gv44CBQW1hem9uIOOCkuOBlOWIqeeUqOOBhOOBn+OBoOOBjeOBvuOBl+OBpuiq
oOOBq+OBguOCiuOBjOOBqOOBhuOBlOOBluOBhOOBvuOBmeOAgiANCuOBiuWuouanmOOBruOCouOC
q+OCpuODs+ODiOOBr+W8t+WItuWBnOatouOBleOCjOOBpuOBhOOBvuOBmSAtIOOCouOCq+OCpuOD
s+ODiOOBp+S4jeWvqeOBquOBiuaUr+aJleOBhOOBjOaknOWHuuOBleOCjOOBvuOBl+OBn+OAgg0K
5Y+W5byV5rOo5paH44KS6Ziy44GQ44Gf44KB44Gr44CB5YCL5Lq65oOF5aCx44KS56K66KqN44GZ
44KL5b+F6KaB44GM44GC44KK44G+44GZ44CCIA0K0JBtYXpvbiDjg63jgrDjgqTjg7MNCuOBquOB
iuOAgTI05pmC6ZaT5Lul5YaF44Gr44GU56K66KqN44GM44Gq44GE5aC05ZCI44CB6Kqg44Gr55Sz
44GX6Kiz44GU44GW44GE44G+44Gb44KT44CB44GK5a6i5qeY44Gu5a6J5YWo44Gu54K644CB44Ki
44Kr44Km44Oz44OI44Gu5Yip55So5Yi26ZmQ44KS44GV44Gb44Gm44GE44Gf44Gg44GN44G+44GZ
44Gu44Gn44CB5LqI44KB44GU5LqG5om/44GP44Gg44GV44GE44CCDQoNCuamguimgSANCuWHpueQ
huaXpSANCjIwMjDlubQ45pyIMTPml6UgIDIxOjIyOjM1ICBKU1QgDQrjgZToq4vmsYLph5HpoY0g
DQrvv6UgMjYyLDYyMiAo56iO5YilKQ0K44GK5pSv5omV44GE5pa55rOVIA0KDQrjgq/jg6zjgrjj
g4Pjg4jjgqvjg7zjg4kgDQpBbWF6b24gUGF55rOo5paH55Wq5Y+3IA0KUDEyLTc1MjgxMzUtNDI0
NDQ2OSANCuiyqeWjsuS6i+alreiAheOBiuWVj+OBhOWQiOOCj+OBm+WFiCANCkFwcGxlIFN0b3Jl
IA0KaW5mb0BhcHBsZS5jb20NCg0K6LKp5aOy5LqL5qWt6ICF44GU5rOo5paH55Wq5Y+3IA0KNy04
ODU3NzExMiANCg0KDQrjgrXjg53jg7zjg4ggDQrms6jmlofjga7oqbPntLDjga/jgIFBbWF6b24g
44Oa44O844K45LiK6YOo44KI44KK44CBQW1hem9uIFBheSDjgavjgrXjgqTjg7PjgqTjg7PjgpLj
gq/jg6rjg4Pjgq/jgZfjgabjgZTnorroqo3jgY/jgaDjgZXjgYTjgIIgDQrjgZTms6jmlofnirbm
s4HjgoToq4vmsYLlhoXlrrnjgavplqLjgZnjgovjgYrllY/jgYTlkIjjgo/jgZvjga9BcHBsZSBT
dG9yZe+8iGluZm9AYXBwbGUuY29t77yJ44Gr44GK5ZWP44GE5ZCI44KP44Gb44GP44Gg44GV44GE
44CCIA0K44GU5rOo5paH44Gr6Zai44GZ44KL44OI44Op44OW44Or44Gv44CB6LO85YWl6ICF5ZCR
44GRQW1hem9u44Oe44O844Kx44OD44OI44OX44Os44Kk44K55L+d6Ki844Gu5a++6LGh44Gr44Gq
44KL5Y+v6IO95oCn44GM44GC44KK44G+44GZ44CCIA0KDQoNCuOBk+OBrkXjg6Hjg7zjg6vjgqLj
g4njg6zjgrnjga/phY3kv6HlsILnlKjjgafjgZnjgILjgZPjga7jg6Hjg4Pjgrvjg7zjgrjjgavo
v5Tkv6HjgZfjgarjgYTjgojjgYbjgYrpoZjjgYTjgYTjgZ/jgZfjgb7jgZnjgIINCg0KwqkgQW1h
em9uIFNlcnZpY2VzIEludGVybmF0aW9uYWwsIEluYy7jgb7jgZ/jga/jgZ3jga7plqLpgKPkvJrn
pL7jgIINCkFsbCByaWdodHMgcmVzZXJ2ZWQuQW1hem9uIFBheeOBiuOCiOOBs0FtYXpvbiBQYXnj
ga7jg63jgrTjga/jgIENCkFtYXpvbi5jb20sIEluYy7jgb7jgZ/jga/jgZ3jga7plqLpgKPkvJrn
pL7jga7nmbvpjLLllYbmqJnjgafjgZnjgIJBbWF6b24gU2VydmljZXMgSW50ZXJuYXRpb25hbCwg
SW5jLiBhbmQgQW1hem9uIFNlcnZpY2VzLCBMTEMgDQo0MTAgVGVycnkgQXZlbnVlIE5vcnRoDQpT
ZWF0dGxlLCBXYXNoaW5ndG9uIDk4MTA5LTUyMTANCg0KDQo=

------=_NextPart_000_050F_01C2B893.1B314EF0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64


------=_NextPart_000_050F_01C2B893.1B314EF0--
